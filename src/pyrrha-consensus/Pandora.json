{
  "contractName": "Pandora",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodesCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "whitelistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "workerNodes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "penaltizeWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_JOB_CREATED",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "jobController",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "guilty",
          "type": "address"
        },
        {
          "name": "reason",
          "type": "uint8"
        }
      ],
      "name": "penaltizeWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_jobId",
          "type": "bytes32"
        },
        {
          "name": "_percent",
          "type": "uint8"
        }
      ],
      "name": "commitProgress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerNodeOwners",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "blacklistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getQueueDepth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_ADD_TO_QUEUE",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createWorkerNode",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "checkJobQueue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerNode",
          "type": "address"
        }
      ],
      "name": "destroyWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_jobId",
          "type": "bytes32"
        },
        {
          "name": "_responseType",
          "type": "uint8"
        },
        {
          "name": "_response",
          "type": "bool"
        }
      ],
      "name": "respondToJob",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_jobId",
          "type": "bytes32"
        },
        {
          "name": "_ipfsResults",
          "type": "bytes"
        }
      ],
      "name": "provideResults",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REQUIRED_DEPOSIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reputation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kernel",
          "type": "address"
        },
        {
          "name": "_dataset",
          "type": "address"
        },
        {
          "name": "_complexity",
          "type": "uint256"
        },
        {
          "name": "_description",
          "type": "bytes32"
        }
      ],
      "name": "createCognitiveJob",
      "outputs": [
        {
          "name": "o_jobId",
          "type": "bytes32"
        },
        {
          "name": "o_resultCode",
          "type": "uint8"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodeFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerAddresses",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_jobController",
          "type": "address"
        },
        {
          "name": "_nodeFactory",
          "type": "address"
        },
        {
          "name": "_reputation",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "jobId",
          "type": "bytes32"
        }
      ],
      "name": "CognitiveJobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "jobId",
          "type": "bytes32"
        }
      ],
      "name": "CognitiveJobQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "worker",
          "type": "address"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.23;\n\nimport \"../lifecycle/OnlyOnce.sol\";\nimport \"./factories/IWorkerNodeFactory.sol\";\nimport \"./managers/CognitiveJobManager.sol\";\nimport \"./managers/ICognitiveJobController.sol\";\nimport \"./token/PAN.sol\";\n\n/**\n * @title Pandora Smart Contract\n * @author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n *\n * @dev # Pandora Smart Contract\n *\n * Main & root contract implementing the first level of Pandora Boxchain consensus\n * See section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\n * for more details.\n *\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\n * and Pandora contracts just simply inherits PAN contract.\n */\n\ncontract Pandora is OnlyOnce, CognitiveJobManager {\n\n    /*******************************************************************************************************************\n     * ## Storage\n     */\n\n    /// ### Public variables\n\n    bytes32 public constant version = \"0.5.1\";\n\n\n    /*******************************************************************************************************************\n     * ## Events\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Constructor and initialization\n     */\n\n    /// ### Constructor\n    /// @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n    /// of worker nodes contracts\n    constructor(\n        ICognitiveJobController _jobController,\n        IWorkerNodeFactory _nodeFactory, /// Factory class for creating WorkerNode contracts\n        IReputation _reputation\n    ) public\n    CognitiveJobManager(_jobController, _nodeFactory, _reputation)\n    // Ensure that the contract is still uninitialized and `initialize` function be called to check the proper\n    // setup of class factories\n    Initializable()\n    Ownable() {\n    }\n\n    /// ### Initialization\n    /// @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    /// @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    function initialize()\n    public\n    onlyOwner\n    onlyOnce(\"initialize\") {\n        // Checks that the factory contracts creator has assigned Pandora as an owner of the factory contracts:\n        // an important security measure preventing \"Parity-style\" contract bugs\n        require(workerNodeFactory.owner() == address(this));\n\n        Initializable.initialize();\n    }\n\n    /*******************************************************************************************************************\n     * ## Modifiers\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Functions\n     */\n\n    /// ### Public and external\n}\n",
  "sourcePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
  "ast": {
    "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        1249
      ]
    },
    "id": 1250,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1193,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 1194,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 576,
        "src": "26:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/IWorkerNodeFactory.sol",
        "file": "./factories/IWorkerNodeFactory.sol",
        "id": 1195,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 1268,
        "src": "62:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 1196,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2218,
        "src": "107:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/ICognitiveJobController.sol",
        "file": "./managers/ICognitiveJobController.sol",
        "id": 1197,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2343,
        "src": "152:48:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/token/PAN.sol",
        "file": "./token/PAN.sol",
        "id": 1198,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2786,
        "src": "201:25:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1199,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 575,
              "src": "917:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$575",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 1200,
            "nodeType": "InheritanceSpecifier",
            "src": "917:8:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1201,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2217,
              "src": "927:19:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$2217",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 1202,
            "nodeType": "InheritanceSpecifier",
            "src": "927:19:12"
          }
        ],
        "contractDependencies": [
          544,
          575,
          2217,
          2376,
          2420,
          2731,
          3098
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": false,
        "id": 1249,
        "linearizedBaseContracts": [
          1249,
          2217,
          2731,
          2420,
          3098,
          544,
          2376,
          575
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1205,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1249,
            "src": "1132:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1203,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1132:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e352e31",
              "id": 1204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1166:7:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_40b49c49a21fb453fa48c22cdd979992e4cfd8529de6dfa38d8a8cd7eb55cec2",
                "typeString": "literal_string \"0.5.1\""
              },
              "value": "0.5.1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "2122:7:12",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 1224,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1214,
                    "name": "_jobController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1207,
                    "src": "1902:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                      "typeString": "contract ICognitiveJobController"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1215,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1209,
                    "src": "1918:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                      "typeString": "contract IWorkerNodeFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1216,
                    "name": "_reputation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1211,
                    "src": "1932:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReputation_$2755",
                      "typeString": "contract IReputation"
                    }
                  }
                ],
                "id": 1217,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1213,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2217,
                  "src": "1882:19:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$2217_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1882:62:12"
              },
              {
                "arguments": [],
                "id": 1219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1218,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 544,
                  "src": "2092:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$544_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2092:15:12"
              },
              {
                "arguments": [],
                "id": 1221,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1220,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3098,
                  "src": "2112:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$3098_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2112:9:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "name": "_jobController",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1700:38:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                    "typeString": "contract ICognitiveJobController"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1206,
                    "name": "ICognitiveJobController",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2342,
                    "src": "1700:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                      "typeString": "contract ICognitiveJobController"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1748:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                    "typeString": "contract IWorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1208,
                    "name": "IWorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1267,
                    "src": "1748:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                      "typeString": "contract IWorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "name": "_reputation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1841:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReputation_$2755",
                    "typeString": "contract IReputation"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1210,
                    "name": "IReputation",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2755,
                    "src": "1841:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReputation_$2755",
                      "typeString": "contract IReputation"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1690:180:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:12"
            },
            "scope": 1249,
            "src": "1679:450:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "2517:298:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2432,
                              "src": "2728:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                                "typeString": "contract IWorkerNodeFactory"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3023,
                            "src": "2728:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1237,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3695,
                              "src": "2765:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$1249",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$1249",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2757:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2757:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2728:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3629,
                        3630
                      ],
                      "referencedDeclaration": 3629,
                      "src": "2720:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:51:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1242,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2782:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$544_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 533,
                      "src": "2782:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:26:12"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 1248,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1226,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3032,
                  "src": "2480:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2480:9:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2503:12:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 1230,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1228,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 574,
                  "src": "2494:8:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2494:22:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:2:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:12"
            },
            "scope": 1249,
            "src": "2443:372:12",
            "stateMutability": "nonpayable",
            "superFunction": 533,
            "visibility": "public"
          }
        ],
        "scope": 1250,
        "src": "897:2254:12"
      }
    ],
    "src": "0:3152:12"
  },
  "legacyAST": {
    "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        1249
      ]
    },
    "id": 1250,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1193,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 1194,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 576,
        "src": "26:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/factories/IWorkerNodeFactory.sol",
        "file": "./factories/IWorkerNodeFactory.sol",
        "id": 1195,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 1268,
        "src": "62:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 1196,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2218,
        "src": "107:44:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/managers/ICognitiveJobController.sol",
        "file": "./managers/ICognitiveJobController.sol",
        "id": 1197,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2343,
        "src": "152:48:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kostysh/dev/pyrrha-consensus/contracts/pandora/token/PAN.sol",
        "file": "./token/PAN.sol",
        "id": 1198,
        "nodeType": "ImportDirective",
        "scope": 1250,
        "sourceUnit": 2786,
        "src": "201:25:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1199,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 575,
              "src": "917:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$575",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 1200,
            "nodeType": "InheritanceSpecifier",
            "src": "917:8:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1201,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2217,
              "src": "927:19:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$2217",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 1202,
            "nodeType": "InheritanceSpecifier",
            "src": "927:19:12"
          }
        ],
        "contractDependencies": [
          544,
          575,
          2217,
          2376,
          2420,
          2731,
          3098
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": false,
        "id": 1249,
        "linearizedBaseContracts": [
          1249,
          2217,
          2731,
          2420,
          3098,
          544,
          2376,
          575
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1205,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 1249,
            "src": "1132:41:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1203,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1132:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e352e31",
              "id": 1204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1166:7:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_40b49c49a21fb453fa48c22cdd979992e4cfd8529de6dfa38d8a8cd7eb55cec2",
                "typeString": "literal_string \"0.5.1\""
              },
              "value": "0.5.1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "2122:7:12",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 1224,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1214,
                    "name": "_jobController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1207,
                    "src": "1902:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                      "typeString": "contract ICognitiveJobController"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1215,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1209,
                    "src": "1918:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                      "typeString": "contract IWorkerNodeFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1216,
                    "name": "_reputation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1211,
                    "src": "1932:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReputation_$2755",
                      "typeString": "contract IReputation"
                    }
                  }
                ],
                "id": 1217,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1213,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2217,
                  "src": "1882:19:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$2217_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1882:62:12"
              },
              {
                "arguments": [],
                "id": 1219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1218,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 544,
                  "src": "2092:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$544_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2092:15:12"
              },
              {
                "arguments": [],
                "id": 1221,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1220,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3098,
                  "src": "2112:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$3098_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2112:9:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "name": "_jobController",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1700:38:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                    "typeString": "contract ICognitiveJobController"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1206,
                    "name": "ICognitiveJobController",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2342,
                    "src": "1700:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICognitiveJobController_$2342",
                      "typeString": "contract ICognitiveJobController"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1748:31:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                    "typeString": "contract IWorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1208,
                    "name": "IWorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1267,
                    "src": "1748:18:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                      "typeString": "contract IWorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1211,
                  "name": "_reputation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1841:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReputation_$2755",
                    "typeString": "contract IReputation"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1210,
                    "name": "IReputation",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2755,
                    "src": "1841:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReputation_$2755",
                      "typeString": "contract IReputation"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1690:180:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2122:0:12"
            },
            "scope": 1249,
            "src": "1679:450:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "2517:298:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2432,
                              "src": "2728:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWorkerNodeFactory_$1267",
                                "typeString": "contract IWorkerNodeFactory"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3023,
                            "src": "2728:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1237,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3695,
                              "src": "2765:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$1249",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$1249",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2757:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2757:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2728:42:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3629,
                        3630
                      ],
                      "referencedDeclaration": 3629,
                      "src": "2720:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:51:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:51:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1242,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "2782:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$544_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 533,
                      "src": "2782:24:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:26:12"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 1248,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1226,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3032,
                  "src": "2480:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2480:9:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2503:12:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 1230,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1228,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 574,
                  "src": "2494:8:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2494:22:12"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:2:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:12"
            },
            "scope": 1249,
            "src": "2443:372:12",
            "stateMutability": "nonpayable",
            "superFunction": 533,
            "visibility": "public"
          }
        ],
        "scope": 1250,
        "src": "897:2254:12"
      }
    ],
    "src": "0:3152:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "31": {
      "events": {},
      "links": {},
      "address": "0x5c86aa41d803b60cca6c114645d341c23b0cbac5",
      "transactionHash": "0x120505fa3c5bb83f6002fe212231433c9528214d9133a1925a32bed7ffd44cdc"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-12T16:38:07.350Z"
}