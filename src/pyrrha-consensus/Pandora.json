{
  "contractName": "Pandora",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_job",
          "type": "address"
        }
      ],
      "name": "isActiveJob",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodesCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "whitelistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishCognitiveJob",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "workerNodes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeJobs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_JOB_CREATED",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cognitiveJobFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "activeJobsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "jobAddresses",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_guiltyWorker",
          "type": "address"
        },
        {
          "name": "_reason",
          "type": "uint8"
        }
      ],
      "name": "penaltizeWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerNodeOwners",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerOwner",
          "type": "address"
        }
      ],
      "name": "blacklistWorkerOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RESULT_CODE_ADD_TO_QUEUE",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createWorkerNode",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_workerNode",
          "type": "address"
        }
      ],
      "name": "destroyWorkerNode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_arrayLength",
          "type": "uint256"
        },
        {
          "name": "_numbersRange",
          "type": "uint256"
        }
      ],
      "name": "getRandomArray",
      "outputs": [
        {
          "name": "o_result",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kernel",
          "type": "address"
        },
        {
          "name": "_dataset",
          "type": "address"
        }
      ],
      "name": "createCognitiveJob",
      "outputs": [
        {
          "name": "o_cognitiveJob",
          "type": "address"
        },
        {
          "name": "o_resultCode",
          "type": "uint8"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "workerNodeFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "workerAddresses",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_jobFactory",
          "type": "address"
        },
        {
          "name": "_nodeFactory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultCode",
          "type": "uint256"
        }
      ],
      "name": "CognitiveJobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultCode",
          "type": "uint256"
        }
      ],
      "name": "CognitiveJobCreateFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "workerNode",
          "type": "address"
        }
      ],
      "name": "WorkerNodeDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cognitiveJob",
          "type": "address"
        }
      ],
      "name": "CognitiveJobCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60606040526000600460006101000a81548160ff02191690831515021790555034156200002b57600080fd5b60405160408062004b7e833981016040528080519060200190919080519060200190919050508181806601c6bf526340006003819055506601c6bf526340006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460006101000a81548160ff02191690831515021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200014557600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001c457600080fd5b81601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020f62000270565b604051809103906000f08015156200022657600080fd5b601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000280565b60405160f78062004a8783390190565b6147f780620002906000396000f3006060604052600436106101cd576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101d2578063095ea7b3146102605780630ba58574146102ba5780630e3b581f1461030b57806313b5165f14610334578063158ef93e1461036d578063171317511461039a57806318160ddd146103af5780631dc20af4146103d857806321b0908b1461043b57806323b872dd1461049e57806323ce524a146105175780632ff2e9dc14610546578063313ce5671461056f57806336bad8281461059857806354fd4d50146105ed5780635c2b37fa1461061e5780635ecc2e44146106475780635ef177761461069c57806366188463146106e157806370064e331461073b57806370a082311461078c5780637b3c611c146107d95780638129fc1c1461081257806383c94c691461082757806386b07332146108565780638da5cb5b146108ab57806395d89b4114610900578063a9059cbb1461098e578063ae1092ae146109e8578063d73dd62314610a21578063dd62ed3e14610a7b578063ea449e0f14610ae7578063f2fde38b14610b68578063f9bb6cfe14610ba1578063f9d84ade14610c3b578063fdb5b8d414610c90575b600080fd5b34156101dd57600080fd5b6101e5610ce5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022557808201518184015260208101905061020a565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610d1e565b604051808215151515815260200191505060405180910390f35b34156102c557600080fd5b6102f1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e10565b604051808215151515815260200191505060405180910390f35b341561031657600080fd5b61031e610f20565b6040518082815260200191505060405180910390f35b341561033f57600080fd5b61036b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f4f565b005b341561037857600080fd5b610380611006565b604051808215151515815260200191505060405180910390f35b34156103a557600080fd5b6103ad611019565b005b34156103ba57600080fd5b6103c26114b6565b6040518082815260200191505060405180910390f35b34156103e357600080fd5b6103f960048080359060200190919050506114c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561044657600080fd5b61045c60048080359060200190919050506114ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104a957600080fd5b6104fd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061153e565b604051808215151515815260200191505060405180910390f35b341561052257600080fd5b61052a6118f8565b604051808260ff1660ff16815260200191505060405180910390f35b341561055157600080fd5b6105596118fd565b6040518082815260200191505060405180910390f35b341561057a57600080fd5b610582611908565b6040518082815260200191505060405180910390f35b34156105a357600080fd5b6105ab61190d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105f857600080fd5b610600611933565b60405180826000191660001916815260200191505060405180910390f35b341561062957600080fd5b610631611957565b6040518082815260200191505060405180910390f35b341561065257600080fd5b61067e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611986565b604051808261ffff1661ffff16815260200191505060405180910390f35b34156106a757600080fd5b6106df600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803560ff169060200190919050506119a7565b005b34156106ec57600080fd5b610721600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506119cd565b604051808215151515815260200191505060405180910390f35b341561074657600080fd5b610772600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c5e565b604051808215151515815260200191505060405180910390f35b341561079757600080fd5b6107c3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c7e565b6040518082815260200191505060405180910390f35b34156107e457600080fd5b610810600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cc6565b005b341561081d57600080fd5b610825611d74565b005b341561083257600080fd5b61083a6120ca565b604051808260ff1660ff16815260200191505060405180910390f35b341561086157600080fd5b6108696120cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108b657600080fd5b6108be6123a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561090b57600080fd5b6109136123cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610953578082015181840152602081019050610938565b50505050905090810190601f1680156109805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561099957600080fd5b6109ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612406565b604051808215151515815260200191505060405180910390f35b34156109f357600080fd5b610a1f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612625565b005b3415610a2c57600080fd5b610a61600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612b02565b604051808215151515815260200191505060405180910390f35b3415610a8657600080fd5b610ad1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612cfe565b6040518082815260200191505060405180910390f35b3415610af257600080fd5b610b116004808035906020019091908035906020019091905050612d85565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b54578082015181840152602081019050610b39565b505050509050019250505060405180910390f35b3415610b7357600080fd5b610b9f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612e95565b005b610bec600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612fed565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390f35b3415610c4657600080fd5b610c4e6134a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610c9b57600080fd5b610cc7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506134ce565b604051808261ffff1661ffff16815260200191505060405180910390f35b6040805190810160405280600781526020017f50616e646f72610000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600080600060011515600460009054906101000a900460ff161515141515610e3757600080fd5b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16915060008261ffff161415610e9d5760009250610f19565b81806001900392505060128261ffff16815481101515610eb957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161492505b5050919050565b600060011515600460009054906101000a900460ff161515141515610f4457600080fd5b600d80549050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fab57600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600460009054906101000a900460ff1681565b60008060008060011515600460009054906101000a900460ff16151514151561104157600080fd5b601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16935060008461ffff16141515156110a557600080fd5b83806001900394505060128461ffff168154811015156110c157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561112957600080fd5b600091505b8273ffffffffffffffffffffffffffffffffffffffff16634804b4ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561119157600080fd5b5af1151561119e57600080fd5b5050506040518051905082101561134557600115158373ffffffffffffffffffffffffffffffffffffffff1663d6ccdca3846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561122157600080fd5b5af1151561122e57600080fd5b5050506040518051905015151415611338578273ffffffffffffffffffffffffffffffffffffffff166358909400836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15156112ae57600080fd5b5af115156112bb57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff1663e5469d9f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561132757600080fd5b5af1151561133457600080fd5b5050505b818060010192505061112e565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff021916905560126001601280549050038154811015156113ac57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660128561ffff168154811015156113eb57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055905060018401601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555060128054809190600190036114a79190614578565b506114b06134ef565b50505050565b6000600354905090565b600d818154811015156114cf57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60128181548110151561150e57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561157b57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156115c857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561165357600080fd5b6116a4826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611737826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061180882600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600181565b6601c6bf5263400081565b601281565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f302e302e3000000000000000000000000000000000000000000000000000000081565b600060011515600460009054906101000a900460ff16151514151561197b57600080fd5b601280549050905090565b60116020528060005260406000206000915054906101000a900461ffff1681565b60011515600460009054906101000a900460ff1615151415156119c957600080fd5b5050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611ade576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b72565b611af183826137d890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600f6020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d2257600080fd5b600f60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dd057600080fd5b6040805190810160405280600a81526020017f696e697469616c697a650000000000000000000000000000000000000000000081525060001515600b826040518082805190602001908083835b602083101515611e425780518252602082019150602081019050602083039250611e1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515141515611e9157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515611f2d57600080fd5b5af11515611f3a57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16141515611f6657600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561200257600080fd5b5af1151561200f57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff1614151561203b57600080fd5b61204361380f565b6001600b826040518082805190602001908083835b60208310151561207d5780518252602082019150602081019050602083039250612058565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600081565b600080600060011515600460009054906101000a900460ff1615151415156120f657600080fd5b60011515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561215557600080fd5b3391503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219257600080fd5b600d80805490501015156121a557600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561226157600080fd5b5af1151561226e57600080fd5b505050604051805190509050600d805480600101828161228e91906145a4565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600d80549050600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055507f093794466f44429afc8d8ec2c4c7f42c98d5db9b3db965ce46a31e7d4f7c29c881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f50414e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561244357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561249057600080fd5b6124e1826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612574826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008360003390508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561269357600080fd5b5af115156126a057600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156126e357600080fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff1611151561274357600080fd5b60011515600460009054906101000a900460ff16151514151561276557600080fd5b3394508573ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156127cb57600080fd5b5af115156127d857600080fd5b5050506040518051905060ff168673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561284857600080fd5b5af1151561285557600080fd5b5050506040518051905060ff1614151561286e57600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15156128d157600080fd5b5af115156128de57600080fd5b5050506001600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16039350600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055600d6001600d805490500381548110151561299b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d8561ffff168154811015156129da57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055925060018401600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550600d805480919060019003612a9691906145d0565b507f677f03e392472a48b617167ed4dbec758d26d8517257ec077bed2d27d192816486604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000612b9382600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b612d8d6145fc565b600083604051805910612d9d5750595b90808252806020026020018201604052509150600090505b8151811015612e8e57601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd4b6914846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515612e4e57600080fd5b5af11515612e5b57600080fd5b505050604051805190508282815181101515612e7357fe5b90602001906020020181815250508080600101915050612db5565b5092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612ef157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612f2d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080612ffb614610565b6000613005614610565b60011515600460009054906101000a900460ff16151514151561302757600080fd5b600a8873ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561308c57600080fd5b5af1151561309957600080fd5b5050506040518051905060ff16111515156130b357600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561311657600080fd5b5af1151561312357600080fd5b505050604051805190508973ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561319057600080fd5b5af1151561319d57600080fd5b505050604051805190501415156131b357600080fd5b600d6012805490501015156131c757600080fd5b6131cf61382c565b94508773ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561323457600080fd5b5af1151561324157600080fd5b5050506040518051905093508360ff168510156132f057600095506132768989343360156139d690949392919063ffffffff16565b507fea6be648d373c4709986e67f6b7ee9ef9875b1243f38efc6bd48024bc10f8aac8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a186869650965061349c565b6132f985613b97565b925082519150613385838973ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561336657600080fd5b5af1151561337357600080fd5b5050506040518051905060ff16613df9565b9050613392898983613ed6565b9650600195506133ea34601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a15b50505050509250929050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e6020528060005260406000206000915054906101000a900461ffff1681565b6134f7614624565b600080600080613505614610565b600080613510614610565b600080600060011515600460009054906101000a900460ff16151514151561353757600080fd5b600a9a50600099505b61354a6015614249565b8a108061355657508a8a105b156137ca575a985061356661382c565b9750600088111515613577576137ca565b61358088613b97565b9650865195508786141515613594576137ca565b6135a886601561426090919063ffffffff16565b15156135b3576137ca565b6135bd6015614305565b809650819d50505061364f878d6020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561363057600080fd5b5af1151561363d57600080fd5b5050506040518051905060ff16613df9565b93506136648c600001518d6020015186613ed6565b9250600160ff1691507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13a5a8a038115156136e557fe5b0490503273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050613776858203601360008f6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b601360008e6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555089806001019a5050613540565b505050505050505050505050565b60008282111515156137e657fe5b818303905092915050565b600080828401905083811015151561380557fe5b8091505092915050565b6001600460006101000a81548160ff021916908315150217905550565b60008060009150600090505b600d805490508110156139cf57600d8181548110151561385457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156138e257600080fd5b5af115156138ef57600080fd5b5050506040518051905060ff16600d8281548110151561390b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561399957600080fd5b5af115156139a657600080fd5b5050506040518051905060ff1614156139c25781806001019250505b8080600101915050613838565b8191505090565b6000856000018054905060018760000180549050011115156139f757600080fd5b856000018054806001018281613a0d9190614688565b916000526020600020906003020160006060604051908101604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050856001018054806001018281613b6e91906146ba565b916000526020600020900160008590919091505550613b8c86614249565b905095945050505050565b613b9f614610565b613ba7614610565b60008084604051805910613bb85750595b9080825280602002602001820160405250925060009150600090505b600d80549050811015613dee57600d81815481101515613bf057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613c7e57600080fd5b5af11515613c8b57600080fd5b5050506040518051905060ff16600d82815481101515613ca757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613d3557600080fd5b5af11515613d4257600080fd5b5050506040518051905060ff161415613de157600d81815481101515613d6457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383806001019450815181101515613da457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050613bd4565b829350505050919050565b613e01614610565b613e096145fc565b600083604051805910613e195750595b90808252806020026020018201604052509250613e3883518651612d85565b9150600090505b8251811015613ece57848282815181101515613e5757fe5b90602001906020020151815181101515613e6d57fe5b906020019060200201518382815181101515613e8557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050613e3f565b505092915050565b600060011515600460009054906101000a900460ff161515141515613efa57600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c695d2b8585856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561400d578082015181840152602081019050613ff2565b50505050905001945050505050602060405180830381600087803b151561403357600080fd5b5af1151561404057600080fd5b505050604051805190509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561408557fe5b60ff8173ffffffffffffffffffffffffffffffffffffffff1663cc0e82c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156140ea57600080fd5b5af115156140f757600080fd5b5050506040518051905060ff1614151561410d57fe5b6012805480600101828161412191906146e6565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050601280549050601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561423257600080fd5b5af1151561423f57600080fd5b5050509392505050565b600081600201548260000180549050039050919050565b600061426a614624565b61427384614334565b508091505082816020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156142e057600080fd5b5af115156142ed57600080fd5b5050506040518051905060ff16111591505092915050565b61430d614624565b600061431883614334565b80925081935050506143298361449c565b818191509150915091565b61433c614624565b600082600001836002015481548110151561435357fe5b906000526020600020906003020183600101846002015481548110151561437657fe5b90600052602060002090015481606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915091509150915091565b80600201600081548092919060010191905055508060000160018260020154038154811015156144c857fe5b9060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505080600101600182600201540381548110151561456657fe5b90600052602060002090016000905550565b81548183558181151161459f5781836000526020600020918201910161459e9190614712565b5b505050565b8154818355818115116145cb578183600052602060002091820191016145ca9190614712565b5b505050565b8154818355818115116145f7578183600052602060002091820191016145f69190614712565b5b505050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8154818355818115116146b5576003028160030283600052602060002091820191016146b49190614737565b5b505050565b8154818355818115116146e1578183600052602060002091820191016146e09190614712565b5b505050565b81548183558181151161470d5781836000526020600020918201910161470c9190614712565b5b505050565b61473491905b80821115614730576000816000905550600101614718565b5090565b90565b6147c891905b808211156147c457600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060030161473d565b5090565b905600a165627a7a72305820a2cd465c01e9e0a9aca674e1f463460b7c1a6c47114408f4474d9c02f751782c00296060604052341561000f57600080fd5b6000808190555060d3806100246000396000f300606060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063cd4b6914146044575b600080fd5b3415604e57600080fd5b606260048080359060200190919050506078565b6040518082815260200191505060405180910390f35b600081600054101515608c57600080819055505b600054905060008081548092919060010191905055509190505600a165627a7a723058203635b251093193402c2f5166a0ecf7dbbe9b0009c403f30e9047b79885d81b3b0029",
  "deployedBytecode": "0x6060604052600436106101cd576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101d2578063095ea7b3146102605780630ba58574146102ba5780630e3b581f1461030b57806313b5165f14610334578063158ef93e1461036d578063171317511461039a57806318160ddd146103af5780631dc20af4146103d857806321b0908b1461043b57806323b872dd1461049e57806323ce524a146105175780632ff2e9dc14610546578063313ce5671461056f57806336bad8281461059857806354fd4d50146105ed5780635c2b37fa1461061e5780635ecc2e44146106475780635ef177761461069c57806366188463146106e157806370064e331461073b57806370a082311461078c5780637b3c611c146107d95780638129fc1c1461081257806383c94c691461082757806386b07332146108565780638da5cb5b146108ab57806395d89b4114610900578063a9059cbb1461098e578063ae1092ae146109e8578063d73dd62314610a21578063dd62ed3e14610a7b578063ea449e0f14610ae7578063f2fde38b14610b68578063f9bb6cfe14610ba1578063f9d84ade14610c3b578063fdb5b8d414610c90575b600080fd5b34156101dd57600080fd5b6101e5610ce5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022557808201518184015260208101905061020a565b50505050905090810190601f1680156102525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610d1e565b604051808215151515815260200191505060405180910390f35b34156102c557600080fd5b6102f1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e10565b604051808215151515815260200191505060405180910390f35b341561031657600080fd5b61031e610f20565b6040518082815260200191505060405180910390f35b341561033f57600080fd5b61036b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f4f565b005b341561037857600080fd5b610380611006565b604051808215151515815260200191505060405180910390f35b34156103a557600080fd5b6103ad611019565b005b34156103ba57600080fd5b6103c26114b6565b6040518082815260200191505060405180910390f35b34156103e357600080fd5b6103f960048080359060200190919050506114c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561044657600080fd5b61045c60048080359060200190919050506114ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104a957600080fd5b6104fd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061153e565b604051808215151515815260200191505060405180910390f35b341561052257600080fd5b61052a6118f8565b604051808260ff1660ff16815260200191505060405180910390f35b341561055157600080fd5b6105596118fd565b6040518082815260200191505060405180910390f35b341561057a57600080fd5b610582611908565b6040518082815260200191505060405180910390f35b34156105a357600080fd5b6105ab61190d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105f857600080fd5b610600611933565b60405180826000191660001916815260200191505060405180910390f35b341561062957600080fd5b610631611957565b6040518082815260200191505060405180910390f35b341561065257600080fd5b61067e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611986565b604051808261ffff1661ffff16815260200191505060405180910390f35b34156106a757600080fd5b6106df600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803560ff169060200190919050506119a7565b005b34156106ec57600080fd5b610721600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506119cd565b604051808215151515815260200191505060405180910390f35b341561074657600080fd5b610772600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c5e565b604051808215151515815260200191505060405180910390f35b341561079757600080fd5b6107c3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c7e565b6040518082815260200191505060405180910390f35b34156107e457600080fd5b610810600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cc6565b005b341561081d57600080fd5b610825611d74565b005b341561083257600080fd5b61083a6120ca565b604051808260ff1660ff16815260200191505060405180910390f35b341561086157600080fd5b6108696120cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108b657600080fd5b6108be6123a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561090b57600080fd5b6109136123cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610953578082015181840152602081019050610938565b50505050905090810190601f1680156109805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561099957600080fd5b6109ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612406565b604051808215151515815260200191505060405180910390f35b34156109f357600080fd5b610a1f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612625565b005b3415610a2c57600080fd5b610a61600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612b02565b604051808215151515815260200191505060405180910390f35b3415610a8657600080fd5b610ad1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612cfe565b6040518082815260200191505060405180910390f35b3415610af257600080fd5b610b116004808035906020019091908035906020019091905050612d85565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b54578082015181840152602081019050610b39565b505050509050019250505060405180910390f35b3415610b7357600080fd5b610b9f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612e95565b005b610bec600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612fed565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1660ff1681526020019250505060405180910390f35b3415610c4657600080fd5b610c4e6134a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610c9b57600080fd5b610cc7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506134ce565b604051808261ffff1661ffff16815260200191505060405180910390f35b6040805190810160405280600781526020017f50616e646f72610000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600080600060011515600460009054906101000a900460ff161515141515610e3757600080fd5b601160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16915060008261ffff161415610e9d5760009250610f19565b81806001900392505060128261ffff16815481101515610eb957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161492505b5050919050565b600060011515600460009054906101000a900460ff161515141515610f4457600080fd5b600d80549050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fab57600080fd5b6001600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600460009054906101000a900460ff1681565b60008060008060011515600460009054906101000a900460ff16151514151561104157600080fd5b601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16935060008461ffff16141515156110a557600080fd5b83806001900394505060128461ffff168154811015156110c157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561112957600080fd5b600091505b8273ffffffffffffffffffffffffffffffffffffffff16634804b4ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561119157600080fd5b5af1151561119e57600080fd5b5050506040518051905082101561134557600115158373ffffffffffffffffffffffffffffffffffffffff1663d6ccdca3846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561122157600080fd5b5af1151561122e57600080fd5b5050506040518051905015151415611338578273ffffffffffffffffffffffffffffffffffffffff166358909400836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15156112ae57600080fd5b5af115156112bb57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff1663e5469d9f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561132757600080fd5b5af1151561133457600080fd5b5050505b818060010192505061112e565b601160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff021916905560126001601280549050038154811015156113ac57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660128561ffff168154811015156113eb57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055905060018401601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555060128054809190600190036114a79190614578565b506114b06134ef565b50505050565b6000600354905090565b600d818154811015156114cf57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60128181548110151561150e57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561157b57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156115c857600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561165357600080fd5b6116a4826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611737826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061180882600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600181565b6601c6bf5263400081565b601281565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f302e302e3000000000000000000000000000000000000000000000000000000081565b600060011515600460009054906101000a900460ff16151514151561197b57600080fd5b601280549050905090565b60116020528060005260406000206000915054906101000a900461ffff1681565b60011515600460009054906101000a900460ff1615151415156119c957600080fd5b5050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115611ade576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b72565b611af183826137d890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b600f6020528060005260406000206000915054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d2257600080fd5b600f60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dd057600080fd5b6040805190810160405280600a81526020017f696e697469616c697a650000000000000000000000000000000000000000000081525060001515600b826040518082805190602001908083835b602083101515611e425780518252602082019150602081019050602083039250611e1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161515141515611e9157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515611f2d57600080fd5b5af11515611f3a57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16141515611f6657600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561200257600080fd5b5af1151561200f57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff1614151561203b57600080fd5b61204361380f565b6001600b826040518082805190602001908083835b60208310151561207d5780518252602082019150602081019050602083039250612058565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b600081565b600080600060011515600460009054906101000a900460ff1615151415156120f657600080fd5b60011515600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561215557600080fd5b3391503273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219257600080fd5b600d80805490501015156121a557600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ed93318836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561226157600080fd5b5af1151561226e57600080fd5b505050604051805190509050600d805480600101828161228e91906145a4565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600d80549050600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055507f093794466f44429afc8d8ec2c4c7f42c98d5db9b3db965ce46a31e7d4f7c29c881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600381526020017f50414e000000000000000000000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561244357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561249057600080fd5b6124e1826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612574826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b60008060008360003390508173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561269357600080fd5b5af115156126a057600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156126e357600080fd5b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff1611151561274357600080fd5b60011515600460009054906101000a900460ff16151514151561276557600080fd5b3394508573ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156127cb57600080fd5b5af115156127d857600080fd5b5050506040518051905060ff168673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561284857600080fd5b5af1151561285557600080fd5b5050506040518051905060ff1614151561286e57600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15156128d157600080fd5b5af115156128de57600080fd5b5050506001600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16039350600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549061ffff0219169055600d6001600d805490500381548110151561299b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d8561ffff168154811015156129da57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055925060018401600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff160217905550600d805480919060019003612a9691906145d0565b507f677f03e392472a48b617167ed4dbec758d26d8517257ec077bed2d27d192816486604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000612b9382600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b612d8d6145fc565b600083604051805910612d9d5750595b90808252806020026020018201604052509150600090505b8151811015612e8e57601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd4b6914846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1515612e4e57600080fd5b5af11515612e5b57600080fd5b505050604051805190508282815181101515612e7357fe5b90602001906020020181815250508080600101915050612db5565b5092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612ef157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612f2d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080612ffb614610565b6000613005614610565b60011515600460009054906101000a900460ff16151514151561302757600080fd5b600a8873ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561308c57600080fd5b5af1151561309957600080fd5b5050506040518051905060ff16111515156130b357600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561311657600080fd5b5af1151561312357600080fd5b505050604051805190508973ffffffffffffffffffffffffffffffffffffffff1663b1f8d9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561319057600080fd5b5af1151561319d57600080fd5b505050604051805190501415156131b357600080fd5b600d6012805490501015156131c757600080fd5b6131cf61382c565b94508773ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561323457600080fd5b5af1151561324157600080fd5b5050506040518051905093508360ff168510156132f057600095506132768989343360156139d690949392919063ffffffff16565b507fea6be648d373c4709986e67f6b7ee9ef9875b1243f38efc6bd48024bc10f8aac8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a186869650965061349c565b6132f985613b97565b925082519150613385838973ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561336657600080fd5b5af1151561337357600080fd5b5050506040518051905060ff16613df9565b9050613392898983613ed6565b9650600195506133ea34601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137f190919063ffffffff16565b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8787604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681526020019250505060405180910390a15b50505050509250929050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e6020528060005260406000206000915054906101000a900461ffff1681565b6134f7614624565b600080600080613505614610565b600080613510614610565b600080600060011515600460009054906101000a900460ff16151514151561353757600080fd5b600a9a50600099505b61354a6015614249565b8a108061355657508a8a105b156137ca575a985061356661382c565b9750600088111515613577576137ca565b61358088613b97565b9650865195508786141515613594576137ca565b6135a886601561426090919063ffffffff16565b15156135b3576137ca565b6135bd6015614305565b809650819d50505061364f878d6020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561363057600080fd5b5af1151561363d57600080fd5b5050506040518051905060ff16613df9565b93506136648c600001518d6020015186613ed6565b9250600160ff1691507f422ca471d1a1b69b87453d0f5149fd001dc7fd04fc2b5b8b8d70b17398a9b85a8383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13a5a8a038115156136e557fe5b0490503273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505050613776858203601360008f6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546137d890919063ffffffff16565b601360008e6040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555089806001019a5050613540565b505050505050505050505050565b60008282111515156137e657fe5b818303905092915050565b600080828401905083811015151561380557fe5b8091505092915050565b6001600460006101000a81548160ff021916908315150217905550565b60008060009150600090505b600d805490508110156139cf57600d8181548110151561385457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156138e257600080fd5b5af115156138ef57600080fd5b5050506040518051905060ff16600d8281548110151561390b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561399957600080fd5b5af115156139a657600080fd5b5050506040518051905060ff1614156139c25781806001019250505b8080600101915050613838565b8191505090565b6000856000018054905060018760000180549050011115156139f757600080fd5b856000018054806001018281613a0d9190614688565b916000526020600020906003020160006060604051908101604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050856001018054806001018281613b6e91906146ba565b916000526020600020900160008590919091505550613b8c86614249565b905095945050505050565b613b9f614610565b613ba7614610565b60008084604051805910613bb85750595b9080825280602002602001820160405250925060009150600090505b600d80549050811015613dee57600d81815481101515613bf057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae897c556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613c7e57600080fd5b5af11515613c8b57600080fd5b5050506040518051905060ff16600d82815481101515613ca757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c3f6acf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613d3557600080fd5b5af11515613d4257600080fd5b5050506040518051905060ff161415613de157600d81815481101515613d6457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383806001019450815181101515613da457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8080600101915050613bd4565b829350505050919050565b613e01614610565b613e096145fc565b600083604051805910613e195750595b90808252806020026020018201604052509250613e3883518651612d85565b9150600090505b8251811015613ece57848282815181101515613e5757fe5b90602001906020020151815181101515613e6d57fe5b906020019060200201518382815181101515613e8557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050613e3f565b505092915050565b600060011515600460009054906101000a900460ff161515141515613efa57600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c695d2b8585856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561400d578082015181840152602081019050613ff2565b50505050905001945050505050602060405180830381600087803b151561403357600080fd5b5af1151561404057600080fd5b505050604051805190509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561408557fe5b60ff8173ffffffffffffffffffffffffffffffffffffffff1663cc0e82c16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156140ea57600080fd5b5af115156140f757600080fd5b5050506040518051905060ff1614151561410d57fe5b6012805480600101828161412191906146e6565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050601280549050601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561423257600080fd5b5af1151561423f57600080fd5b5050509392505050565b600081600201548260000180549050039050919050565b600061426a614624565b61427384614334565b508091505082816020015173ffffffffffffffffffffffffffffffffffffffff166387ea09616040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156142e057600080fd5b5af115156142ed57600080fd5b5050506040518051905060ff16111591505092915050565b61430d614624565b600061431883614334565b80925081935050506143298361449c565b818191509150915091565b61433c614624565b600082600001836002015481548110151561435357fe5b906000526020600020906003020183600101846002015481548110151561437657fe5b90600052602060002090015481606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915091509150915091565b80600201600081548092919060010191905055508060000160018260020154038154811015156144c857fe5b9060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505080600101600182600201540381548110151561456657fe5b90600052602060002090016000905550565b81548183558181151161459f5781836000526020600020918201910161459e9190614712565b5b505050565b8154818355818115116145cb578183600052602060002091820191016145ca9190614712565b5b505050565b8154818355818115116145f7578183600052602060002091820191016145f69190614712565b5b505050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8154818355818115116146b5576003028160030283600052602060002091820191016146b49190614737565b5b505050565b8154818355818115116146e1578183600052602060002091820191016146e09190614712565b5b505050565b81548183558181151161470d5781836000526020600020918201910161470c9190614712565b5b505050565b61473491905b80821115614730576000816000905550600101614718565b5090565b90565b6147c891905b808211156147c457600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060030161473d565b5090565b905600a165627a7a72305820a2cd465c01e9e0a9aca674e1f463460b7c1a6c47114408f4474d9c02f751782c0029",
  "sourceMap": "1008:2347:22:-;;;82:5:16;56:31;;;;;;;;;;;;;;;;;;;;1812:457:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:11;2071:12;5046::28;1529:19:32;1595:11;:28;;;;1529:19;1633:8;:20;1642:10;1633:20;;;;;;;;;;;;;;;:37;;;;150:5:16;136:11;;:19;;;;;;;;;;;;;;;;;;508:10:35;500:5;;:18;;;;;;;;;;;;;;;;;;4081:1:31;4057:26;;:12;:26;;;;4049:35;;;;;;;;4164:12;4144:17;;:32;;;;;;;;;;;;;;;;;;3825:358;5183:1:28;5160:25;;:11;:25;;;;5152:34;;;;;;;;5268:11;5246:19;;:33;;;;;;;;;;;;;;;;;;5470:23;;:::i;:::-;;;;;;;;;;;;;;;;;;5448:19;;:45;;;;;;;;;;;;;;;;;;4790:710;;1812:457:22;;1008:2347;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1008:2347:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:39:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;852:39:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:183:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6085:778:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6142:180:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5363:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;56:31:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10237:996:28;;;;;;;;;;;;;;1788:88:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:32:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:33:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:439:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3247:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1491:57:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:41:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2665:114:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2477:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7635:337:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:398:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3032:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:107:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5851:228:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:435:22;;;;;;;;;;;;;;3078:50:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6496:1133:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;897:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;897:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:379:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8130:1232:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:257:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17759:317:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17759:317:28;;;;;;;;;;;;;;;;;831:169:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;7075:2855:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:42:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:39:32;;;;;;;;;;;;;;;;;;;;:::o;1798:183:39:-;1865:4;1909:6;1877:7;:19;1885:10;1877:19;;;;;;;;;;;;;;;:29;1897:8;1877:29;;;;;;;;;;;;;;;:38;;;;1942:8;1921:38;;1930:10;1921:38;;;1952:6;1921:38;;;;;;;;;;;;;;;;;;1972:4;1965:11;;1798:183;;;;:::o;6085:778:28:-;6227:4;6330:12;6706:17;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;6345:12:28;:18;6358:4;6345:18;;;;;;;;;;;;;;;;;;;;;;;;;6330:33;;6440:1;6431:5;:10;;;6427:53;;;6464:5;6457:12;;;;6427:53;6634:7;;;;;;;;6726:10;6737:5;6726:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6706:37;;6851:4;6844:11;;:3;:11;;;6837:19;;480:1:16;6085:778:28;;;;;:::o;6142:180:31:-;6232:4;465::16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;6297:11:31;:18;;;;6290:25;;6142:180;:::o;5363:316::-;652:5:35;;;;;;;;;;;638:19;;:10;:19;;;630:28;;;;;;;;5668:4:31;5635:16;:30;5652:12;5635:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;5363:316;:::o;56:31:16:-;;;;;;;;;;;;;:::o;10237:996:28:-;10384:12;10480:17;10618:7;10966:22;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;10399:12:28;:24;10412:10;10399:24;;;;;;;;;;;;;;;;;;;;;;;;;10384:39;;10450:1;10441:5;:10;;;;10433:19;;;;;;;;10462:7;;;;;;;;10500:10;10511:5;10500:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10480:37;;10551:10;10535:26;;10543:3;10535:26;;;10527:35;;;;;;;;10628:1;10618:11;;10613:192;10636:3;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10631:2;:29;10613:192;;;10714:4;10686:32;;:3;:20;;;10707:2;10686:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;10682:113;;;10738:3;:17;;;10756:2;10738:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10682:113;10662:4;;;;;;;10613:192;;;10930:12;:26;10951:3;10930:26;;;;;;;;;;;;;;;;10923:33;;;;;;;;;;;11011:10;11042:1;11022:10;:17;;;;:21;11011:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;10991:10;11002:5;10991:17;;;;;;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;10966:78;;11087:1;11079:5;:9;11054:12;:22;11067:8;11054:22;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;11098:10;:19;;;;;;;;;;;;:::i;:::-;;11210:16;:14;:16::i;:::-;10237:996;;;;:::o;1788:88:32:-;1832:7;1858:11;;1851:18;;1788:88;:::o;2070:32:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2577:33:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;736:439:39:-;818:4;853:1;838:17;;:3;:17;;;;830:26;;;;;;;;880:8;:15;889:5;880:15;;;;;;;;;;;;;;;;870:6;:25;;862:34;;;;;;;;920:7;:14;928:5;920:14;;;;;;;;;;;;;;;:26;935:10;920:26;;;;;;;;;;;;;;;;910:6;:36;;902:45;;;;;;;;972:27;992:6;972:8;:15;981:5;972:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;954:8;:15;963:5;954:15;;;;;;;;;;;;;;;:45;;;;1021:25;1039:6;1021:8;:13;1030:3;1021:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1005:8;:13;1014:3;1005:13;;;;;;;;;;;;;;;:41;;;;1081:38;1112:6;1081:7;:14;1089:5;1081:14;;;;;;;;;;;;;;;:26;1096:10;1081:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1052:7;:14;1060:5;1052:14;;;;;;;;;;;;;;;:26;1067:10;1052:26;;;;;;;;;;;;;;;:67;;;;1141:3;1125:28;;1134:5;1125:28;;;1146:6;1125:28;;;;;;;;;;;;;;;;;;1166:4;1159:11;;736:439;;;;;:::o;3247:49:28:-;3295:1;3247:49;:::o;1491:57:32:-;1529:19;1491:57;:::o;940:34::-;972:2;940:34;:::o;2160:46:28:-;;;;;;;;;;;;;:::o;1265:41:22:-;;;:::o;2665:114:28:-;2729:7;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;2755:10:28;:17;;;;2748:24;;2665:114;:::o;2477:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;7635:337:31:-;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;7635:337:31;;:::o;3602:398:39:-;3685:4;3697:13;3713:7;:19;3721:10;3713:19;;;;;;;;;;;;;;;:29;3733:8;3713:29;;;;;;;;;;;;;;;;3697:45;;3771:8;3752:16;:27;3748:164;;;3821:1;3789:7;:19;3797:10;3789:19;;;;;;;;;;;;;;;:29;3809:8;3789:29;;;;;;;;;;;;;;;:33;;;;3748:164;;;3875:30;3888:16;3875:8;:12;;:30;;;;:::i;:::-;3843:7;:19;3851:10;3843:19;;;;;;;;;;;;;;;:29;3863:8;3843:29;;;;;;;;;;;;;;;:62;;;;3748:164;3938:8;3917:61;;3926:10;3917:61;;;3948:7;:19;3956:10;3948:19;;;;;;;;;;;;;;;:29;3968:8;3948:29;;;;;;;;;;;;;;;;3917:61;;;;;;;;;;;;;;;;;;3991:4;3984:11;;3602:398;;;;;:::o;3032:48:31:-;;;;;;;;;;;;;;;;;;;;;;:::o;1189:107:36:-;1245:15;1275:8;:16;1284:6;1275:16;;;;;;;;;;;;;;;;1268:23;;1189:107;;;:::o;5851:228:31:-;652:5:35;;;;;;;;;;;638:19;;:10;:19;;;630:28;;;;;;;;6042:16:31;:30;6059:12;6042:30;;;;;;;;;;;;;;;;6035:37;;;;;;;;;;;5851:228;:::o;2583:435:22:-;652:5:35;;;;;;;;;;;638:19;;:10;:19;;;630:28;;;;;;;;360:233:17;;;;;;;;;;;;;;;;;;538:5;520:23;;:9;530:3;520:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;520:14:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;512:32;;;;;;;;2905:4:22;2868:42;;:17;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;2860:51;;;;;;;;2968:4;2929:44;;:19;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;2921:53;;;;;;;;2985:26;:24;:26::i;:::-;582:4:17;565:9;575:3;565:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;565:14:17;;;;;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;664:1:35;2583:435:22:o;3078:50:28:-;3127:1;3078:50;:::o;6496:1133:31:-;6605:11;6672:17;7141:22;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;4749:4:31;4717:36;;:16;:28;4734:10;4717:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;4709:45;;;;;;;;6692:10;6672:30;;6844:9;6830:23;;:10;:23;;;6822:32;;;;;;;;6958:10;6937:11;:18;;;;:31;6929:40;;;;;;;;7166:17;;;;;;;;;;;:24;;;7191:9;7166:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7141:60;;7310:11;:28;;;;;;;;;;;:::i;:::-;;;;;;;;;;7327:10;7310:28;;;;;;;;;;;;;;;;;;;;;;;7511:11;:18;;;;7465:15;:36;7489:10;7465:36;;;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;7565:29;7583:10;7565:29;;;;;;;;;;;;;;;;;;;;;;7612:10;7605:17;;6496:1133;;;:::o;238:20:35:-;;;;;;;;;;;;;:::o;897:37:32:-;;;;;;;;;;;;;;;;;;;;:::o;608:379:36:-;671:4;706:1;691:17;;:3;:17;;;;683:26;;;;;;;;733:8;:20;742:10;733:20;;;;;;;;;;;;;;;;723:6;:30;;715:39;;;;;;;;847:32;872:6;847:8;:20;856:10;847:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;824:8;:20;833:10;824:20;;;;;;;;;;;;;;;:55;;;;901:25;919:6;901:8;:13;910:3;901:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;885:8;:13;894:3;885:13;;;;;;;;;;;;;;;:41;;;;953:3;932:33;;941:10;932:33;;;958:6;932:33;;;;;;;;;;;;;;;;;;978:4;971:11;;608:379;;;;:::o;8130:1232:31:-;8327:17;8979:12;9077:23;8233:11;4856:17;4876:10;4856:30;;4925:11;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4904:41;;:9;:41;;;4896:50;;;;;;;;4993:1;4964:15;:26;4980:9;4964:26;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;4956:39;;;;;;;;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;8347:10:31;8327:30;;8458:11;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8428:48;;:11;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;;;8420:57;;;;;;;;8894:11;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9023:1;8994:15;:26;9010:9;8994:26;;;;;;;;;;;;;;;;;;;;;;;;;:30;8979:45;;9041:15;:26;9057:9;9041:26;;;;;;;;;;;;;;;;9034:33;;;;;;;;;;;9124:11;9157:1;9136:11;:18;;;;:22;9124:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;9103:11;9115:5;9103:18;;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;9077:82;;9208:1;9200:5;:9;9169:15;:28;9185:11;9169:28;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;9219:11;:20;;;;;;;;;;;;:::i;:::-;;9323:32;9343:11;9323:32;;;;;;;;;;;;;;;;;;;;;;8130:1232;;;;;;:::o;2883:257:39:-;2961:4;3005:46;3039:11;3005:7;:19;3013:10;3005:19;;;;;;;;;;;;;;;:29;3025:8;3005:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;2973:7;:19;2981:10;2973:19;;;;;;;;;;;;;;;:29;2993:8;2973:29;;;;;;;;;;;;;;;:78;;;;3078:8;3057:61;;3066:10;3057:61;;;3088:7;:19;3096:10;3088:19;;;;;;;;;;;;;;;:29;3108:8;3088:29;;;;;;;;;;;;;;;;3057:61;;;;;;;;;;;;;;;;;;3131:4;3124:11;;2883:257;;;;:::o;2300:126::-;2374:7;2396;:15;2404:6;2396:15;;;;;;;;;;;;;;;:25;2412:8;2396:25;;;;;;;;;;;;;;;;2389:32;;2300:126;;;;:::o;17759:317:28:-;17866:18;;:::i;:::-;17949:6;17921:12;17907:27;;;;;;;;;;;;;;;;;;;;;;;;17896:38;;17958:1;17949:10;;17944:126;17965:8;:15;17961:1;:19;17944:126;;;18015:19;;;;;;;;;;;:29;;;18045:13;18015:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18001:8;18010:1;18001:11;;;;;;;;;;;;;;;;;:58;;;;;17982:3;;;;;;;17944:126;;;17759:317;;;;;:::o;831:169:35:-;652:5;;;;;;;;;;;638:19;;:10;:19;;;630:28;;;;;;;;927:1;907:22;;:8;:22;;;;899:31;;;;;;;;964:8;936:37;;957:5;;;;;;;;;;;936:37;;;;;;;;;;;;987:8;979:5;;:16;;;;;;;;;;;;;;;;;;831:169;:::o;7075:2855:28:-;7320:28;7414:18;8326:21;8474:18;8928:32;;:::i;:::-;9004:15;9526:36;;:::i;:::-;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;7717:2:28;7690:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;;7682:38;;;;;;;;7845:8;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7824:7;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;7816:48;;;;;;;;7956:10;7936;:17;;;;:30;7928:39;;;;;;;;8350:19;:17;:19::i;:::-;8326:43;;8495:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8474:44;;8556:12;8548:21;;8532:13;:37;8528:303;;;3127:1;8585:39;;8638:63;8660:7;8669:8;8679:9;8690:10;8638:17;:21;;:63;;;;;;;:::i;:::-;;8715:54;8740:14;8756:12;8715:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8791:14;8807:12;8783:37;;;;;;8528:303;8963:31;8980:13;8963:16;:31::i;:::-;8928:66;;9022:11;:18;9004:36;;9565:63;9591:11;9604:8;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9565:63;;:25;:63::i;:::-;9526:102;;9656:53;9674:7;9683:8;9693:15;9656:17;:53::i;:::-;9639:70;;3295:1;9719:38;;9828:35;9853:9;9828:8;:20;9837:10;9828:20;;;;;;;;;;;;;;;;:24;;:35;;;;:::i;:::-;9805:8;:20;9814:10;9805:20;;;;;;;;;;;;;;;:58;;;;9874:49;9894:14;9910:12;9874:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:1:16;7075:2855:28;;;;;;;;;;:::o;1928:42:31:-;;;;;;;;;;;;;:::o;2614:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;11481:2253:28:-;11578:38;;:::i;:::-;11674:29;11784:9;11926:15;12105:21;12389:32;;:::i;:::-;12469:15;12792:13;13008:36;;:::i;:::-;13134:33;13255:15;13420:24;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;11706:2:28;11674:34;;11796:1;11784:13;;11779:1949;11804:30;:17;:28;:30::i;:::-;11800:1;:34;11799:70;;;;11844:24;11840:1;:28;11799:70;11779:1949;;;11944:7;11926:25;;12129:19;:17;:19::i;:::-;12105:43;;12243:1;12226:13;:18;;12222:62;;;12264:5;;12222:62;12424:31;12441:13;12424:16;:31::i;:::-;12389:66;;12487:11;:18;12469:36;;12537:13;12523:10;:27;;12519:71;;;12570:5;;12519:71;12676:62;12727:10;12676:17;:50;;:62;;;;:::i;:::-;12675:63;12671:107;;;12758:5;;12671:107;12872:30;:17;:28;:30::i;:::-;12851:51;;;;;;;;13047:72;13073:11;13086:9;:17;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13047:72;;:25;:72::i;:::-;13008:111;;13170:71;13188:9;:16;;;13206:9;:17;;;13225:15;13170:17;:71::i;:::-;13134:107;;3295:1;13255:41;;;;13311:52;13331:19;13352:10;13311:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;13472:11;13461:7;13448:10;:20;13447:36;;;;;;;;13420:63;;13532:9;:14;;:35;13547:19;13532:35;;;;;;;;;;;;;;;;;;;;;;;;13658:59;13711:5;13689:19;:27;13658:8;:26;13667:9;:16;;;13658:26;;;;;;;;;;;;;;;;:30;;:59;;;;:::i;:::-;13629:8;:26;13638:9;:16;;;13629:26;;;;;;;;;;;;;;;:88;;;;11871:3;;;;;;;11779:1949;;;11481:2253;;;;;;;;;;;;:::o;836:110:34:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;1008:129::-;1066:7;1081:9;1097:1;1093;:5;1081:17;;1116:1;1111;:6;;1104:14;;;;;;1131:1;1124:8;;1008:129;;;;;:::o;168:64:16:-;221:4;207:11;;:18;;;;;;;;;;;;;;;;;;168:64::o;16533:429:28:-;16625:20;16749:6;16733:1;16715:19;;16758:1;16749:10;;16744:180;16765:11;:18;;;;16761:1;:22;16744:180;;;16841:11;16853:1;16841:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16808:54;;:11;16820:1;16808:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;16804:110;;;16882:17;;;;;;;16804:110;16785:3;;;;;;;16744:180;;;16940:15;16933:22;;16533:429;;:::o;713:434:13:-;888:4;943:6;:15;;:22;;;;938:1;913:6;:15;;:22;;;;:26;912:53;904:62;;;;;;;;1008:6;:15;;:59;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1029:37;;;;;;;;;1039:7;1029:37;;;;;;1048:8;1029:37;;;;;;1058:7;1029:37;;;;;1008:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:6;:15;;:28;;;;;;;;;;;:::i;:::-;;;;;;;;;;1098:6;1077:28;;;;;;;1122:18;1133:6;1122:10;:18::i;:::-;1115:25;;713:434;;;;;;;:::o;17208:545:28:-;17331:13;;:::i;:::-;17404:32;;:::i;:::-;17482:18;17519:6;17457:14;17439:33;;;;;;;;;;;;;;;;;;;;;;;;17404:68;;17503:1;17482:22;;17528:1;17519:10;;17514:205;17535:11;:18;;;;17531:1;:22;17514:205;;;17611:11;17623:1;17611:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17578:54;;:11;17590:1;17578:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;17574:135;;;17680:11;17692:1;17680:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;17652:11;17664:12;;;;;;17652:25;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;17574:135;17555:3;;;;;;;17514:205;;;17735:11;17728:18;;17208:545;;;;;;:::o;15615:715::-;15897:29;;:::i;:::-;16062:30;;:::i;:::-;16203:6;16029:22;16011:41;;;;;;;;;;;;;;;;;;;;;;;;15993:59;;16095:93;16123:15;:22;16167:12;:19;16095:14;:93::i;:::-;16062:126;;16212:1;16203:10;;16198:126;16219:15;:22;16215:1;:26;16198:126;;;16283:12;16296:13;16310:1;16296:16;;;;;;;;;;;;;;;;;;16283:30;;;;;;;;;;;;;;;;;;16262:15;16278:1;16262:18;;;;;;;;;;;;;;;;;:51;;;;;;;;;;;16243:3;;;;;;;16198:126;;;15615:715;;;;;;:::o;14021:1346::-;14618:28;465:4:16;450:19;;:11;;;;;;;;;;;:19;;;442:28;;;;;;;;14837:19:28;;;;;;;;;;;:26;;;14864:7;14873:8;14883:16;14837:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14837:63:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14820:80;;15003:1;14977:28;;:14;:28;;;;14970:36;;;;;;15165:4;15135:14;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;15128:42;;;;;;15225:10;:31;;;;;;;;;;;:::i;:::-;;;;;;;;;;15241:14;15225:31;;;;;;;;;;;;;;;;;;;;;;;15304:10;:17;;;;15266:12;:28;15279:14;15266:28;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;15333:14;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14021:1346;;;;;:::o;461:178:13:-;555:10;611:6;:21;;;586:6;:15;;:22;;;;:46;578:54;;461:178;;;:::o;1390:312::-;1537:4;1553:29;;:::i;:::-;1610:12;1615:6;1610:4;:12::i;:::-;1592:30;;;;;1678:17;1639:12;:20;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;1632:63;;1390:312;;;;;:::o;1866:277::-;1947:22;;:::i;:::-;1971:13;2020:12;2025:6;2020:4;:12::i;:::-;1996:36;;;;;;;;2084:14;2091:6;2084;:14::i;:::-;2116:12;2130:5;2108:28;;;;1866:277;;;:::o;2194:201::-;2268:9;;:::i;:::-;2279:10;2309:6;:15;;2325:6;:21;;;2309:38;;;;;;;;;;;;;;;;;;;;2349:6;:15;;2365:6;:21;;;2349:38;;;;;;;;;;;;;;;;;;;2301:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:201;;;:::o;2444:282::-;2518:6;:21;;;:23;;;;;;;;;;;;;2589:6;:15;;2629:1;2605:6;:21;;;:25;2589:42;;;;;;;;;;;;;;;;;;;;;2582:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2677:6;:15;;2717:1;2693:6;:21;;;:25;2677:42;;;;;;;;;;;;;;;;;;2670:49;;;2444:282;:::o;1008:2347:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport '../lifecycle/OnlyOnce.sol';\nimport '../nodes/IWorkerNode.sol';\nimport '../entities/IDataEntity.sol';\nimport './factories/CognitiveJobFactory.sol';\nimport './factories/WorkerNodeFactory.sol';\nimport './managers/CognitiveJobManager.sol';\nimport './lottery/RoundRobinLottery.sol';\n\nimport './IPandora.sol';\n\n/**\n * @title Pandora Smart Contract\n * @author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n *\n * @dev # Pandora Smart Contract\n *\n * Main & root contract implementing the first level of Pandora Boxchain consensus\n * See section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\n * for more details.\n *\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\n * and Pandora contracts just simply inherits PAN contract.\n */\n\ncontract Pandora is IPandora, OnlyOnce, CognitiveJobManager /* final */ {\n\n    /*******************************************************************************************************************\n     * ## Storage\n     */\n\n    /// ### Public variables\n\n    bytes32 public constant version = \"0.0.0\";\n\n\n    /*******************************************************************************************************************\n     * ## Events\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Constructor and initialization\n     */\n\n    /// ### Constructor\n    /// @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n    /// of worker nodes contracts\n    function Pandora (\n        CognitiveJobFactory _jobFactory, /// Factory class for creating CognitiveJob contracts\n        WorkerNodeFactory _nodeFactory /// Factory class for creating WorkerNode contracts\n    )\n    public\n    CognitiveJobManager(_jobFactory, _nodeFactory)\n    // Ensure that the contract is still uninitialized and `initialize` function be called to check the proper\n    // setup of class factories\n    Initializable()\n    Ownable() {\n    }\n\n    /// ### Initialization\n    /// @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    /// @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n    /// contract owner.\n    function initialize()\n    public\n    onlyOwner\n    onlyOnce('initialize') {\n        // Checks that the factory contracts creator has assigned Pandora as an owner of the factory contracts:\n        // an important security measure preventing \"Parity-style\" contract bugs\n        require(workerNodeFactory.owner() == address(this));\n        require(cognitiveJobFactory.owner() == address(this));\n\n        Initializable.initialize();\n    }\n\n    /*******************************************************************************************************************\n     * ## Modifiers\n     */\n\n\n    /*******************************************************************************************************************\n     * ## Functions\n     */\n\n    /// ### Public and external\n\n}\n",
  "sourcePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/Pandora.sol",
  "ast": {
    "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        3285
      ]
    },
    "id": 3286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3217,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 3218,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 2497,
        "src": "26:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/nodes/IWorkerNode.sol",
        "file": "../nodes/IWorkerNode.sol",
        "id": 3219,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 2583,
        "src": "62:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/entities/IDataEntity.sol",
        "file": "../entities/IDataEntity.sol",
        "id": 3220,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 621,
        "src": "97:37:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/factories/CognitiveJobFactory.sol",
        "file": "./factories/CognitiveJobFactory.sol",
        "id": 3221,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3335,
        "src": "135:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/factories/WorkerNodeFactory.sol",
        "file": "./factories/WorkerNodeFactory.sol",
        "id": 3222,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3388,
        "src": "181:43:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 3223,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 4277,
        "src": "225:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/lottery/RoundRobinLottery.sol",
        "file": "./lottery/RoundRobinLottery.sol",
        "id": 3224,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3485,
        "src": "270:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/IPandora.sol",
        "file": "./IPandora.sol",
        "id": 3225,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3216,
        "src": "313:24:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3226,
              "name": "IPandora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3215,
              "src": "1028:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPandora_$3215",
                "typeString": "contract IPandora"
              }
            },
            "id": 3227,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:8:22"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3228,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2496,
              "src": "1038:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$2496",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 3229,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:8:22"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3230,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4276,
              "src": "1048:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$4276",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 3231,
            "nodeType": "InheritanceSpecifier",
            "src": "1048:19:22"
          }
        ],
        "contractDependencies": [
          2465,
          2496,
          3215,
          4276,
          4322,
          4365,
          4656,
          4701,
          4887,
          4983,
          5026,
          5058,
          5304
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": true,
        "id": 3285,
        "linearizedBaseContracts": [
          3285,
          4276,
          4656,
          2496,
          3215,
          4365,
          4887,
          4322,
          2465,
          4701,
          5304,
          4983,
          5026,
          5058
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3234,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 3285,
            "src": "1265:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3232,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1265:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e30",
              "id": 3233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1299:7:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_09a13c37e92d1241eb6d4e601d2ee55d46fecc5385dc68e1f17d2201a79bbb5e",
                "typeString": "literal_string \"0.0.0\""
              },
              "value": "0.0.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3249,
              "nodeType": "Block",
              "src": "2262:7:22",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 3250,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3241,
                    "name": "_jobFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3236,
                    "src": "2058:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3242,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3238,
                    "src": "2071:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  }
                ],
                "id": 3243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3240,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4276,
                  "src": "2038:19:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$4276_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2038:46:22"
              },
              {
                "arguments": [],
                "id": 3245,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3244,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2465,
                  "src": "2232:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$2465_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2232:15:22"
              },
              {
                "arguments": [],
                "id": 3247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3246,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4887,
                  "src": "2252:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$4887_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2252:9:22"
              }
            ],
            "name": "Pandora",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3236,
                  "name": "_jobFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "1839:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                    "typeString": "contract CognitiveJobFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3235,
                    "name": "CognitiveJobFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3334,
                    "src": "1839:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3238,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "1934:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                    "typeString": "contract WorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3237,
                    "name": "WorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3387,
                    "src": "1934:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1829:193:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:22"
            },
            "scope": 3285,
            "src": "1812:457:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3283,
              "nodeType": "Block",
              "src": "2657:361:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3259,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4377,
                              "src": "2868:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                                "typeString": "contract WorkerNodeFactory"
                              }
                            },
                            "id": 3260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4835,
                            "src": "2868:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3263,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5404,
                              "src": "2905:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2897:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2897:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2868:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5320,
                      "src": "2860:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3267,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3269,
                              "name": "cognitiveJobFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3501,
                              "src": "2929:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                                "typeString": "contract CognitiveJobFactory"
                              }
                            },
                            "id": 3270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4835,
                            "src": "2929:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3273,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5404,
                              "src": "2968:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2960:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2929:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5320,
                      "src": "2921:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:53:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3278,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2985:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$2465_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2454,
                      "src": "2985:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:26:22"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 3284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 3253,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3252,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4861,
                  "src": "2620:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:9:22"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2643:12:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 3256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3254,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2495,
                  "src": "2634:8:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2634:22:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2602:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:22"
            },
            "scope": 3285,
            "src": "2583:435:22",
            "stateMutability": "nonpayable",
            "superFunction": 2454,
            "visibility": "public"
          }
        ],
        "scope": 3286,
        "src": "1008:2347:22"
      }
    ],
    "src": "0:3356:22"
  },
  "legacyAST": {
    "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/Pandora.sol",
    "exportedSymbols": {
      "Pandora": [
        3285
      ]
    },
    "id": 3286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3217,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/lifecycle/OnlyOnce.sol",
        "file": "../lifecycle/OnlyOnce.sol",
        "id": 3218,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 2497,
        "src": "26:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/nodes/IWorkerNode.sol",
        "file": "../nodes/IWorkerNode.sol",
        "id": 3219,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 2583,
        "src": "62:34:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/entities/IDataEntity.sol",
        "file": "../entities/IDataEntity.sol",
        "id": 3220,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 621,
        "src": "97:37:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/factories/CognitiveJobFactory.sol",
        "file": "./factories/CognitiveJobFactory.sol",
        "id": 3221,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3335,
        "src": "135:45:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/factories/WorkerNodeFactory.sol",
        "file": "./factories/WorkerNodeFactory.sol",
        "id": 3222,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3388,
        "src": "181:43:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/managers/CognitiveJobManager.sol",
        "file": "./managers/CognitiveJobManager.sol",
        "id": 3223,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 4277,
        "src": "225:44:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/lottery/RoundRobinLottery.sol",
        "file": "./lottery/RoundRobinLottery.sol",
        "id": 3224,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3485,
        "src": "270:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/aleksei/pandora-pyrrha/pyrrha-consensus/contracts/pandora/IPandora.sol",
        "file": "./IPandora.sol",
        "id": 3225,
        "nodeType": "ImportDirective",
        "scope": 3286,
        "sourceUnit": 3216,
        "src": "313:24:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3226,
              "name": "IPandora",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3215,
              "src": "1028:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPandora_$3215",
                "typeString": "contract IPandora"
              }
            },
            "id": 3227,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:8:22"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3228,
              "name": "OnlyOnce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2496,
              "src": "1038:8:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OnlyOnce_$2496",
                "typeString": "contract OnlyOnce"
              }
            },
            "id": 3229,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:8:22"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3230,
              "name": "CognitiveJobManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4276,
              "src": "1048:19:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CognitiveJobManager_$4276",
                "typeString": "contract CognitiveJobManager"
              }
            },
            "id": 3231,
            "nodeType": "InheritanceSpecifier",
            "src": "1048:19:22"
          }
        ],
        "contractDependencies": [
          2465,
          2496,
          3215,
          4276,
          4322,
          4365,
          4656,
          4701,
          4887,
          4983,
          5026,
          5058,
          5304
        ],
        "contractKind": "contract",
        "documentation": "@title Pandora Smart Contract\n@author \"Dr Maxim Orlovsky\" <orlovsky@pandora.foundation>\n * @dev # Pandora Smart Contract\n * Main & root contract implementing the first level of Pandora Boxchain consensus\nSee section [\"3.3. Proof of Cognitive Work (PoCW)\" in Pandora white paper](https://steemit.com/cryptocurrency/%40pandoraboxchain/world-decentralized-ai-on-blockchain-with-cognitive-mining-and-open-markets-for-data-and-algorithms-pandora-boxchain)\nfor more details.\n * Contract token functionality is separated into a separate contract named PAN (after the name of the token)\nand Pandora contracts just simply inherits PAN contract.",
        "fullyImplemented": true,
        "id": 3285,
        "linearizedBaseContracts": [
          3285,
          4276,
          4656,
          2496,
          3215,
          4365,
          4887,
          4322,
          2465,
          4701,
          5304,
          4983,
          5026,
          5058
        ],
        "name": "Pandora",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3234,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 3285,
            "src": "1265:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3232,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1265:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e302e30",
              "id": 3233,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1299:7:22",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_09a13c37e92d1241eb6d4e601d2ee55d46fecc5385dc68e1f17d2201a79bbb5e",
                "typeString": "literal_string \"0.0.0\""
              },
              "value": "0.0.0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3249,
              "nodeType": "Block",
              "src": "2262:7:22",
              "statements": []
            },
            "documentation": "### Constructor\n @dev Constructor receives addresses for the owners of whitelisted worker nodes, which will be assigned an owners\n of worker nodes contracts",
            "id": 3250,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3241,
                    "name": "_jobFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3236,
                    "src": "2058:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3242,
                    "name": "_nodeFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3238,
                    "src": "2071:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  }
                ],
                "id": 3243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3240,
                  "name": "CognitiveJobManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4276,
                  "src": "2038:19:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CognitiveJobManager_$4276_$",
                    "typeString": "type(contract CognitiveJobManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2038:46:22"
              },
              {
                "arguments": [],
                "id": 3245,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3244,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2465,
                  "src": "2232:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$2465_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2232:15:22"
              },
              {
                "arguments": [],
                "id": 3247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3246,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4887,
                  "src": "2252:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$4887_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2252:9:22"
              }
            ],
            "name": "Pandora",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3236,
                  "name": "_jobFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "1839:31:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                    "typeString": "contract CognitiveJobFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3235,
                    "name": "CognitiveJobFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3334,
                    "src": "1839:19:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                      "typeString": "contract CognitiveJobFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3238,
                  "name": "_nodeFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3250,
                  "src": "1934:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                    "typeString": "contract WorkerNodeFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3237,
                    "name": "WorkerNodeFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3387,
                    "src": "1934:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                      "typeString": "contract WorkerNodeFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1829:193:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:22"
            },
            "scope": 3285,
            "src": "1812:457:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3283,
              "nodeType": "Block",
              "src": "2657:361:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3259,
                              "name": "workerNodeFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4377,
                              "src": "2868:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkerNodeFactory_$3387",
                                "typeString": "contract WorkerNodeFactory"
                              }
                            },
                            "id": 3260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4835,
                            "src": "2868:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3263,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5404,
                              "src": "2905:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2897:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2897:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2868:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5320,
                      "src": "2860:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:51:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3267,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:51:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3269,
                              "name": "cognitiveJobFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3501,
                              "src": "2929:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CognitiveJobFactory_$3334",
                                "typeString": "contract CognitiveJobFactory"
                              }
                            },
                            "id": 3270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4835,
                            "src": "2929:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3273,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5404,
                              "src": "2968:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Pandora_$3285",
                                "typeString": "contract Pandora"
                              }
                            ],
                            "id": 3272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2960:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2929:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5320,
                      "src": "2921:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:53:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3278,
                        "name": "Initializable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2465,
                        "src": "2985:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Initializable_$2465_$",
                          "typeString": "type(contract Initializable)"
                        }
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2454,
                      "src": "2985:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:26:22"
                }
              ]
            },
            "documentation": "### Initialization\n @notice Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.\n @dev Function that checks the proper setup of class factories. May be called only once and only by Pandora\n contract owner.",
            "id": 3284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 3253,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3252,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4861,
                  "src": "2620:9:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:9:22"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "696e697469616c697a65",
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2643:12:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7479dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463",
                      "typeString": "literal_string \"initialize\""
                    },
                    "value": "initialize"
                  }
                ],
                "id": 3256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3254,
                  "name": "onlyOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2495,
                  "src": "2634:8:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2634:22:22"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2602:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 3257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:22"
            },
            "scope": 3285,
            "src": "2583:435:22",
            "stateMutability": "nonpayable",
            "superFunction": 2454,
            "visibility": "public"
          }
        ],
        "scope": 3286,
        "src": "1008:2347:22"
      }
    ],
    "src": "0:3356:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-11T12:12:45.964Z"
}